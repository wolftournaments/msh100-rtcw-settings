//game_manager//////////////////////////////////////////////////////////////////
game_manager {
	spawn
	{

		wm_mapdescription "Axis forces are developing next generation of Super Soldiers. Allies must steal their research result."

		wm_allied_respawntime 30
		wm_axis_respawntime 30

		wm_set_round_timelimit 10

		wm_number_of_objectives 4

		wm_set_objective_status 1 0
		wm_set_objective_status 2 0
		wm_set_objective_status 3 0
		wm_set_objective_status 4 -1

		wm_objective_allied_desc 1	"Primary Objective:**Spy the Password and input it to start process, then defend the Emergency Button until process finished."
		wm_objective_allied_desc 2	"Primary Objective:**Steal the Endoarm."
		wm_objective_allied_desc 3	"Secondary Objective:**Breach the Service Door."
		wm_objective_allied_desc 4	"Secondary Objective:**Capture the Flag."

		wm_objective_axis_desc 1	"Primary Objective:**Prevent the Allies from spying the Password and input it. If Password is input, push the Emergency Button to abort process."
		wm_objective_axis_desc 2	"Primary Objective:**Prevent Allies from stealing the Endoarm."
		wm_objective_axis_desc 3	"Secondary Objective:**Defend the Service Door."
		wm_objective_axis_desc 4	"Secondary Objective:**Hold the Flag."

		wm_objective_image			1	"gfx/2d/mp_objectives/mp_password2_password.tga"
		wm_objective_image			2	"gfx/2d/mp_objectives/mp_password2_endoarm.tga"
		wm_objective_image			3	"gfx/2d/mp_objectives/mp_password2_door.tga"
		wm_objective_image			4	"gfx/2d/mp_objectives/mp_password2_flag.tga"


		wm_objective_short_allied_desc 1	"Spy the Password."
		wm_objective_short_allied_desc 2	"Steal the Endoarm."
		wm_objective_short_allied_desc 3	"Breach the Service Door."
		wm_objective_short_allied_desc 4	"Capture the Flag."

		wm_objective_short_axis_desc 1	"Defend the Password."
		wm_objective_short_axis_desc 2	"Defend the Endoarm."
		wm_objective_short_axis_desc 3	"Defend the Service Door."
		wm_objective_short_axis_desc 4	"Hold the Flag."


		wm_set_defending_team	0

		wm_setwinner 0
	}

	// Password
	trigger password_started {
		wm_set_objective_status 1 -1
		wm_announce "Process started with valid password!"
	}
	trigger password_halted {
		wm_set_objective_status 1 0
		wm_announce "Process aborted..."
		wait 3000
		wm_announce "Password has been changed..."
	}
	trigger password_done {
		wm_set_objective_status 1 1
		alertentity snd_cd_finish
		wm_announce "Process finished!"
		wm_set_objective_status		3	1
		accum 1 set 1
		trigger game_manager checkgame
	}

	// Steal the Docs
	trigger axis_object_stolen
	{
		wm_set_objective_status		2	1
	}

	trigger axis_object_returned
	{
		wm_set_objective_status		2	0
	}

	// Escape with the Docs
	trigger endoarm {
		wm_set_objective_status		3	1
		accum 1 set 1
		wm_announce	"Allies escaped with the Endoarm!"
		trigger game_manager checkgame
	}

	//Service Door
	trigger service_door {
		wm_set_objective_status		3	1
		wm_announce	"Allies breach the Service Door!"
	}

	// Spawn flag
	trigger spawn_flagblue
	{
		wm_set_objective_status		4	1
		wm_announce	"Allies capture the Service Halls!"
	}
	trigger spawn_flagred
	{
		wm_set_objective_status		4	-1
		wm_announce	"Axis reclaims the Service Halls!"
	}

	trigger checkgame
	{
		accum 1 abort_if_not_equal 1
		wm_setwinner 1
		wait 1000
		wm_endround
	}
}

// Escape with the Endoarm
allied_endoarm {
	death {
		trigger game_manager endoarm
	}
}

// Service Door
allied_servicedoor {
	death
	{
		trigger game_manager service_door
	}
}

// Spawn flag
allied_flag
{
	trigger axis_capture
	{
		trigger game_manager spawn_flagred
	}
	trigger allied_capture
	{
		trigger game_manager spawn_flagblue
	}
}

//////////////////////////////////////////////////////////////////////
// LIFT MOVERS
//////////////////////////////////////////////////////////////////////
lift {
	spawn {
	}
	trigger open {
		playsound sound/movers/elevators/elev1_start.wav
		wait 990
		playsound sound/movers/elevators/elev1_loop.wav looping forever
		faceangles 0 0 29 10000
		stopsound
		playsound sound/movers/elevators/elev1_end.wav
		trigger lift_switch accum2_set1
	}
	trigger close {
		playsound sound/movers/elevators/elev1_start.wav
		wait 990
		playsound sound/movers/elevators/elev1_loop.wav looping forever
		faceangles 0 0 0 10000
		stopsound
		playsound sound/movers/elevators/elev1_end.wav
		trigger lift_switch accum2_set0
	}
}

lift_switch {
	spawn {
		accum 1 set 0 //break flag
		accum 2 set 0 //open flag, 0=closed, 1=opened
	}
	trigger push {
		trigger lift_switch open
		trigger lift_switch close
	}
	trigger open {
		accum 1 abort_if_not_equal 0
		accum 2 abort_if_not_equal 0
		trigger lift_switch_mover open
		wait 200
		trigger lift open
		accum 1 set 1
	}
	trigger close {
		accum 1 abort_if_not_equal 1
		accum 2 abort_if_not_equal 1
		trigger lift_switch_mover close
		wait 200
		trigger lift close
		accum 1 set 0
	}
	trigger accum2_set0 {
		accum 2 set 0
	}
	trigger accum2_set1 {
		accum 2 set 1
	}
}

lift_switch_mover {
	trigger open {
		playsound sound/movers/switches/butn2.wav
		gotomarker pt_lift_open 64
	}
	trigger close {
		playsound sound/movers/switches/butn2.wav
		gotomarker pt_lift_close 64
	}
}

//////////////////////////////////////////////////////////////////////
// ALLIED TEAM DOOR
//////////////////////////////////////////////////////////////////////
allied_door_push {
	trigger outside {
		trigger allied_door open_to_inside
	}
	trigger inside {
		trigger allied_door open_to_outside
	}
}

allied_door {
	trigger open_to_outside {
		accum 1 abort_if_equal 1
		accum 1 set 1 // this door being used
		playsound sound/movers/doors/door8_open.wav
		faceangles 0 -90 0 1000
		wait 2000
		playsound sound/movers/doors/door8_close.wav
		faceangles 0 0 0 1000
		accum 1 set 0
	}
	trigger open_to_inside {
		accum 1 abort_if_equal 1
		accum 1 set 1 // this door being used
		playsound sound/movers/doors/door8_open.wav
		faceangles 0 90 0 1000
		wait 2000
		playsound sound/movers/doors/door8_close.wav
		faceangles 0 0 0 1000
		accum 1 set 0
	}
}


// *** パスワードの生成・表示・管理を行うスクリプト郡 disp1-disp4 ***

// マップ中では一桁分のディスプレイを script_mover にして、
// scriptname に disp* を設定する。
// つまり、ディスプレイがパスワードの記憶と表示を兼任する。

//disp1/////////////////////////////////////////////////////////////////////////
disp1 {
	spawn {
		trigger disp1 set
	}

	trigger set {
		accum 1 random 8
		accum 1 inc 1
		trigger disp1 set1
		trigger disp1 set2
		trigger disp1 set3
		trigger disp1 set4
		trigger disp1 set5
		trigger disp1 set6
		trigger disp1 set7
		trigger disp1 set8
	}
	trigger set1 {
		accum 1 abort_if_not_equal 1
		faceangles 0 0 0 1
	}
	trigger set2 {
		accum 1 abort_if_not_equal 2
		faceangles -45 0 0 1
	}
	trigger set3 {
		accum 1 abort_if_not_equal 3
		faceangles -90 0 0 1
	}
	trigger set4 {
		accum 1 abort_if_not_equal 4
		faceangles -135 0 0 1
	}
	trigger set5 {
		accum 1 abort_if_not_equal 5
		faceangles -180 0 0 1
	}
	trigger set6 {
		accum 1 abort_if_not_equal 6
		faceangles -225 0 0 1
	}
	trigger set7 {
		accum 1 abort_if_not_equal 7
		faceangles -270 0 0 1
	}-
	trigger set8 {
		accum 1 abort_if_not_equal 8
		faceangles -315 0 0 1
	}

	trigger is1 {
		accum 1 abort_if_not_equal 1
		trigger password_manager good1
	}
	trigger is2 {
		accum 1 abort_if_not_equal 2
		trigger password_manager good1
	}
	trigger is3 {
		accum 1 abort_if_not_equal 3
		trigger password_manager good1
	}
	trigger is4 {
		accum 1 abort_if_not_equal 4
		trigger password_manager good1
	}
	trigger is5 {
		accum 1 abort_if_not_equal 5
		trigger password_manager good1
	}
	trigger is6 {
		accum 1 abort_if_not_equal 6
		trigger password_manager good1
	}
	trigger is7 {
		accum 1 abort_if_not_equal 7
		trigger password_manager good1
	}
	trigger is8 {
		accum 1 abort_if_not_equal 8
		trigger password_manager good1
	}
}

//disp2/////////////////////////////////////////////////////////////////////////
disp2 {
	spawn {
		trigger disp2 set
	}

	trigger set {
		accum 1 random 8
		accum 1 inc 1
		trigger disp2 set1
		trigger disp2 set2
		trigger disp2 set3
		trigger disp2 set4
		trigger disp2 set5
		trigger disp2 set6
		trigger disp2 set7
		trigger disp2 set8
	}
	trigger set1 {
		accum 1 abort_if_not_equal 1
		faceangles 0 0 0 1
	}
	trigger set2 {
		accum 1 abort_if_not_equal 2
		faceangles -45 0 0 1
	}
	trigger set3 {
		accum 1 abort_if_not_equal 3
		faceangles -90 0 0 1
	}
	trigger set4 {
		accum 1 abort_if_not_equal 4
		faceangles -135 0 0 1
	}
	trigger set5 {
		accum 1 abort_if_not_equal 5
		faceangles -180 0 0 1
	}
	trigger set6 {
		accum 1 abort_if_not_equal 6
		faceangles -225 0 0 1
	}
	trigger set7 {
		accum 1 abort_if_not_equal 7
		faceangles -270 0 0 1
	}
	trigger set8 {
		accum 1 abort_if_not_equal 8
		faceangles -315 0 0 1
	}

	trigger is1 {
		accum 1 abort_if_not_equal 1
		trigger password_manager good2
	}
	trigger is2 {
		accum 1 abort_if_not_equal 2
		trigger password_manager good2
	}
	trigger is3 {
		accum 1 abort_if_not_equal 3
		trigger password_manager good2
	}
	trigger is4 {
		accum 1 abort_if_not_equal 4
		trigger password_manager good2
	}
	trigger is5 {
		accum 1 abort_if_not_equal 5
		trigger password_manager good2
	}
	trigger is6 {
		accum 1 abort_if_not_equal 6
		trigger password_manager good2
	}
	trigger is7 {
		accum 1 abort_if_not_equal 7
		trigger password_manager good2
	}
	trigger is8 {
		accum 1 abort_if_not_equal 8
		trigger password_manager good2
	}
}

//disp3/////////////////////////////////////////////////////////////////////////
disp3 {
	spawn {
		trigger disp3 set
	}

	trigger set {
		accum 1 random 8
		accum 1 inc 1
		trigger disp3 set1
		trigger disp3 set2
		trigger disp3 set3
		trigger disp3 set4
		trigger disp3 set5
		trigger disp3 set6
		trigger disp3 set7
		trigger disp3 set8
	}
	trigger set1 {
		accum 1 abort_if_not_equal 1
		faceangles 0 0 0 1
	}
	trigger set2 {
		accum 1 abort_if_not_equal 2
		faceangles -45 0 0 1
	}
	trigger set3 {
		accum 1 abort_if_not_equal 3
		faceangles -90 0 0 1
	}
	trigger set4 {
		accum 1 abort_if_not_equal 4
		faceangles -135 0 0 1
	}
	trigger set5 {
		accum 1 abort_if_not_equal 5
		faceangles -180 0 0 1
	}
	trigger set6 {
		accum 1 abort_if_not_equal 6
		faceangles -225 0 0 1
	}
	trigger set7 {
		accum 1 abort_if_not_equal 7
		faceangles -270 0 0 1
	}
	trigger set8 {
		accum 1 abort_if_not_equal 8
		faceangles -315 0 0 1
	}

	trigger is1 {
		accum 1 abort_if_not_equal 1
		trigger password_manager good3
	}
	trigger is2 {
		accum 1 abort_if_not_equal 2
		trigger password_manager good3
	}
	trigger is3 {
		accum 1 abort_if_not_equal 3
		trigger password_manager good3
	}
	trigger is4 {
		accum 1 abort_if_not_equal 4
		trigger password_manager good3
	}
	trigger is5 {
		accum 1 abort_if_not_equal 5
		trigger password_manager good3
	}
	trigger is6 {
		accum 1 abort_if_not_equal 6
		trigger password_manager good3
	}
	trigger is7 {
		accum 1 abort_if_not_equal 7
		trigger password_manager good3
	}
	trigger is8 {
		accum 1 abort_if_not_equal 8
		trigger password_manager good3
	}
}

//disp4/////////////////////////////////////////////////////////////////////////
disp4 {
	spawn {
		trigger disp4 set
	}

	trigger set {
		accum 1 random 8
		accum 1 inc 1
		trigger disp4 set1
		trigger disp4 set2
		trigger disp4 set3
		trigger disp4 set4
		trigger disp4 set5
		trigger disp4 set6
		trigger disp4 set7
		trigger disp4 set8
	}
	trigger set1 {
		accum 1 abort_if_not_equal 1
		faceangles 0 0 0 1
	}
	trigger set2 {
		accum 1 abort_if_not_equal 2
		faceangles -45 0 0 1
	}
	trigger set3 {
		accum 1 abort_if_not_equal 3
		faceangles -90 0 0 1
	}
	trigger set4 {
		accum 1 abort_if_not_equal 4
		faceangles -135 0 0 1
	}
	trigger set5 {
		accum 1 abort_if_not_equal 5
		faceangles -180 0 0 1
	}
	trigger set6 {
		accum 1 abort_if_not_equal 6
		faceangles -225 0 0 1
	}
	trigger set7 {
		accum 1 abort_if_not_equal 7
		faceangles -270 0 0 1
	}
	trigger set8 {
		accum 1 abort_if_not_equal 8
		faceangles -315 0 0 1
	}

	trigger is1 {
		accum 1 abort_if_not_equal 1
		trigger password_manager good4
	}
	trigger is2 {
		accum 1 abort_if_not_equal 2
		trigger password_manager good4
	}
	trigger is3 {
		accum 1 abort_if_not_equal 3
		trigger password_manager good4
	}
	trigger is4 {
		accum 1 abort_if_not_equal 4
		trigger password_manager good4
	}
	trigger is5 {
		accum 1 abort_if_not_equal 5
		trigger password_manager good4
	}
	trigger is6 {
		accum 1 abort_if_not_equal 6
		trigger password_manager good4
	}
	trigger is7 {
		accum 1 abort_if_not_equal 7
		trigger password_manager good4
	}
	trigger is8 {
		accum 1 abort_if_not_equal 8
		trigger password_manager good4
	}
}



// *** パスワードの入力管理を行うスクリプト ***
//accum 1 : store last input number
//accum 2 : store current digit number
//accum 3 : bitflag for check each digits
//accum 4 : door open flag
//accum 5 : store the number of faults
password_manager {
	spawn {
		accum 2 set 1
	}

	// "1" を入力すると target_script_trigger から呼ばれる
	trigger input1 {
		alertentity snd_button1
		accum 4 abort_if_equal 1
		accum 1 set 1
		trigger password_manager check_digit1
		trigger password_manager check_digit2
		trigger password_manager check_digit3
		trigger password_manager check_digit4
		accum 2 inc 1
	}
	// "2" を入力すると target_script_trigger から呼ばれる
	trigger input2 {
		alertentity snd_button2
		accum 4 abort_if_equal 1
		accum 1 set 2
		trigger password_manager check_digit1
		trigger password_manager check_digit2
		trigger password_manager check_digit3
		trigger password_manager check_digit4
		accum 2 inc 1
	}
	// "3" を入力すると target_script_trigger から呼ばれる
	trigger input3 {
		alertentity snd_button3
		accum 4 abort_if_equal 1
		accum 1 set 3
		trigger password_manager check_digit1
		trigger password_manager check_digit2
		trigger password_manager check_digit3
		trigger password_manager check_digit4
		accum 2 inc 1
	}
	// "4" を入力すると target_script_trigger から呼ばれる
	trigger input4 {
		alertentity snd_button4
		accum 4 abort_if_equal 1
		accum 1 set 4
		trigger password_manager check_digit1
		trigger password_manager check_digit2
		trigger password_manager check_digit3
		trigger password_manager check_digit4
		accum 2 inc 1
	}
	// "5" を入力すると target_script_trigger から呼ばれる
	trigger input5 {
		alertentity snd_button5
		accum 4 abort_if_equal 1
		accum 1 set 5
		trigger password_manager check_digit1
		trigger password_manager check_digit2
		trigger password_manager check_digit3
		trigger password_manager check_digit4
		accum 2 inc 1
	}
	// "6" を入力すると target_script_trigger から呼ばれる
	trigger input6 {
		alertentity snd_button6
		accum 4 abort_if_equal 1
		accum 1 set 6
		trigger password_manager check_digit1
		trigger password_manager check_digit2
		trigger password_manager check_digit3
		trigger password_manager check_digit4
		accum 2 inc 1
	}
	// "7" を入力すると target_script_trigger から呼ばれる
	trigger input7 {
		alertentity snd_button7
		accum 4 abort_if_equal 1
		accum 1 set 7
		trigger password_manager check_digit1
		trigger password_manager check_digit2
		trigger password_manager check_digit3
		trigger password_manager check_digit4
		accum 2 inc 1
	}
	// "8" を入力すると target_script_trigger から呼ばれる
	trigger input8 {
		alertentity snd_button8
		accum 4 abort_if_equal 1
		accum 1 set 8
		trigger password_manager check_digit1
		trigger password_manager check_digit2
		trigger password_manager check_digit3
		trigger password_manager check_digit4
		accum 2 inc 1
	}

	// 1桁目の正否判定。
	trigger check_digit1 {
		accum 2 abort_if_not_equal 1
		trigger input_disp set1
		trigger password_manager check_digit1_is1
		trigger password_manager check_digit1_is2
		trigger password_manager check_digit1_is3
		trigger password_manager check_digit1_is4
		trigger password_manager check_digit1_is5
		trigger password_manager check_digit1_is6
		trigger password_manager check_digit1_is7
		trigger password_manager check_digit1_is8
	}
	trigger check_digit1_is1 {
		accum 1 abort_if_not_equal 1
		trigger disp1 is1
	}
	trigger check_digit1_is2 {
		accum 1 abort_if_not_equal 2
		trigger disp1 is2
	}
	trigger check_digit1_is3 {
		accum 1 abort_if_not_equal 3
		trigger disp1 is3
	}
	trigger check_digit1_is4 {
		accum 1 abort_if_not_equal 4
		trigger disp1 is4
	}
	trigger check_digit1_is5 {
		accum 1 abort_if_not_equal 5
		trigger disp1 is5
	}
	trigger check_digit1_is6 {
		accum 1 abort_if_not_equal 6
		trigger disp1 is6
	}
	trigger check_digit1_is7 {
		accum 1 abort_if_not_equal 7
		trigger disp1 is7
	}
	trigger check_digit1_is8 {
		accum 1 abort_if_not_equal 8
		trigger disp1 is8
	}
	trigger good1 {
		accum 3 bitset 1
	}

	// 2桁目の正否判定。
	trigger check_digit2 {
		accum 2 abort_if_not_equal 2
		trigger input_disp set2
		trigger password_manager check_digit2_is1
		trigger password_manager check_digit2_is2
		trigger password_manager check_digit2_is3
		trigger password_manager check_digit2_is4
		trigger password_manager check_digit2_is5
		trigger password_manager check_digit2_is6
		trigger password_manager check_digit2_is7
		trigger password_manager check_digit2_is8
	}
	trigger check_digit2_is1 {
		accum 1 abort_if_not_equal 1
		trigger disp2 is1
	}
	trigger check_digit2_is2 {
		accum 1 abort_if_not_equal 2
		trigger disp2 is2
	}
	trigger check_digit2_is3 {
		accum 1 abort_if_not_equal 3
		trigger disp2 is3
	}
	trigger check_digit2_is4 {
		accum 1 abort_if_not_equal 4
		trigger disp2 is4
	}
	trigger check_digit2_is5 {
		accum 1 abort_if_not_equal 5
		trigger disp2 is5
	}
	trigger check_digit2_is6 {
		accum 1 abort_if_not_equal 6
		trigger disp2 is6
	}
	trigger check_digit2_is7 {
		accum 1 abort_if_not_equal 7
		trigger disp2 is7
	}
	trigger check_digit2_is8 {
		accum 1 abort_if_not_equal 8
		trigger disp2 is8
	}
	trigger good2 {
		accum 3 bitset 2
	}

	// 3桁目の正否判定。
	trigger check_digit3 {
		accum 2 abort_if_not_equal 3
		trigger input_disp set3
		trigger password_manager check_digit3_is1
		trigger password_manager check_digit3_is2
		trigger password_manager check_digit3_is3
		trigger password_manager check_digit3_is4
		trigger password_manager check_digit3_is5
		trigger password_manager check_digit3_is6
		trigger password_manager check_digit3_is7
		trigger password_manager check_digit3_is8
	}
	trigger check_digit3_is1 {
		accum 1 abort_if_not_equal 1
		trigger disp3 is1
	}
	trigger check_digit3_is2 {
		accum 1 abort_if_not_equal 2
		trigger disp3 is2
	}
	trigger check_digit3_is3 {
		accum 1 abort_if_not_equal 3
		trigger disp3 is3
	}
	trigger check_digit3_is4 {
		accum 1 abort_if_not_equal 4
		trigger disp3 is4
	}
	trigger check_digit3_is5 {
		accum 1 abort_if_not_equal 5
		trigger disp3 is5
	}
	trigger check_digit3_is6 {
		accum 1 abort_if_not_equal 6
		trigger disp3 is6
	}
	trigger check_digit3_is7 {
		accum 1 abort_if_not_equal 7
		trigger disp3 is7
	}
	trigger check_digit3_is8 {
		accum 1 abort_if_not_equal 8
		trigger disp3 is8
	}
	trigger good3 {
		accum 3 bitset 3
	}

	// 4桁目の正否判定。
	trigger check_digit4 {
		accum 2 abort_if_not_equal 4
		trigger input_disp set4
		trigger password_manager check_digit4_is1
		trigger password_manager check_digit4_is2
		trigger password_manager check_digit4_is3
		trigger password_manager check_digit4_is4
		trigger password_manager check_digit4_is5
		trigger password_manager check_digit4_is6
		trigger password_manager check_digit4_is7
		trigger password_manager check_digit4_is8

		trigger password_manager final_answer
	}
	trigger check_digit4_is1 {
		accum 1 abort_if_not_equal 1
		trigger disp4 is1
	}
	trigger check_digit4_is2 {
		accum 1 abort_if_not_equal 2
		trigger disp4 is2
	}
	trigger check_digit4_is3 {
		accum 1 abort_if_not_equal 3
		trigger disp4 is3
	}
	trigger check_digit4_is4 {
		accum 1 abort_if_not_equal 4
		trigger disp4 is4
	}
	trigger check_digit4_is5 {
		accum 1 abort_if_not_equal 5
		trigger disp4 is5
	}
	trigger check_digit4_is6 {
		accum 1 abort_if_not_equal 6
		trigger disp4 is6
	}
	trigger check_digit4_is7 {
		accum 1 abort_if_not_equal 7
		trigger disp4 is7
	}
	trigger check_digit4_is8 {
		accum 1 abort_if_not_equal 8
		trigger disp4 is8
	}
	trigger good4 {
		accum 3 bitset 4
	}

	trigger final_answer {
		trigger password_manager final_isgood
		trigger password_manager final_isbad
	}

	trigger final_isgood {
		accum 3 abort_if_not_equal 30

		//ボタンを無効にする
		trigger button1 accum_set0
		trigger button2 accum_set0
		trigger button3 accum_set0
		trigger button4 accum_set0
		trigger button5 accum_set0
		trigger button6 accum_set0
		trigger button7 accum_set0
		trigger button8 accum_set0

// ** ここにパスワード成功時のイベント **
		wait 500
		accum 4 set 1
		trigger game_manager password_started
		trigger input_disp setgood
		trigger dockey on
		wait 3000
		trigger halt_button accum_set1
		trigger halt_button_mover on
	}

	trigger final_isbad {
		accum 3 abort_if_equal 30

		//ボタンを一時無効にする
		trigger button1 accum_set0
		trigger button2 accum_set0
		trigger button3 accum_set0
		trigger button4 accum_set0
		trigger button5 accum_set0
		trigger button6 accum_set0
		trigger button7 accum_set0
		trigger button8 accum_set0

		accum 2 set 1
		wait 500
		trigger input_disp setbad
		trigger input_disp noise
		//wait 10000 // 10秒間は再入力不可
		wait 5000 // 5秒間は再入力不可
		//trigger input_disp setbad

		//ボタンを有効にする
		trigger button1 accum_set1
		trigger button2 accum_set1
		trigger button3 accum_set1
		trigger button4 accum_set1
		trigger button5 accum_set1
		trigger button6 accum_set1
		trigger button7 accum_set1
		trigger button8 accum_set1

		trigger input_disp set0
	}

	trigger reset {
		// パスワードリセット処理
		trigger disp1 set
		trigger disp2 set
		trigger disp3 set
		trigger disp4 set
		accum 2 set 1
		accum 3 set 0
		accum 4 set 0
		trigger input_disp set0
	}
}





//button1 - button8/////////////////////////////////////////////////////////////
button1 {
	spawn {
		accum 1 set 1 //これが0だとボタンを押せない
	}
	trigger push {
		accum 1 abort_if_not_equal 1
		trigger password_manager input1
	}
	trigger accum_set0 {
		accum 1 set 0
	}
	trigger accum_set1 {
		accum 1 set 1
	}
}

button2 {
	spawn {
		accum 1 set 1 //これが0だとボタンを押せない
	}
	trigger push {
		accum 1 abort_if_not_equal 1
		trigger password_manager input2
	}
	trigger accum_set0 {
		accum 1 set 0
	}
	trigger accum_set1 {
		accum 1 set 1
	}
}

button3 {
	spawn {
		accum 1 set 1 //これが0だとボタンを押せない
	}
	trigger push {
		accum 1 abort_if_not_equal 1
		trigger password_manager input3
	}
	trigger accum_set0 {
		accum 1 set 0
	}
	trigger accum_set1 {
		accum 1 set 1
	}
}

button4 {
	spawn {
		accum 1 set 1 //これが0だとボタンを押せない
	}
	trigger push {
		accum 1 abort_if_not_equal 1
		trigger password_manager input4
	}
	trigger accum_set0 {
		accum 1 set 0
	}
	trigger accum_set1 {
		accum 1 set 1
	}
}

button5 {
	spawn {
		accum 1 set 1 //これが0だとボタンを押せない
	}
	trigger push {
		accum 1 abort_if_not_equal 1
		trigger password_manager input5
	}
	trigger accum_set0 {
		accum 1 set 0
	}
	trigger accum_set1 {
		accum 1 set 1
	}
}

button6 {
	spawn {
		accum 1 set 1 //これが0だとボタンを押せない
	}
	trigger push {
		accum 1 abort_if_not_equal 1
		trigger password_manager input6
	}
	trigger accum_set0 {
		accum 1 set 0
	}
	trigger accum_set1 {
		accum 1 set 1
	}
}

button7 {
	spawn {
		accum 1 set 1 //これが0だとボタンを押せない
	}
	trigger push {
		accum 1 abort_if_not_equal 1
		trigger password_manager input7
	}
	trigger accum_set0 {
		accum 1 set 0
	}
	trigger accum_set1 {
		accum 1 set 1
	}
}

button8 {
	spawn {
		accum 1 set 1 //これが0だとボタンを押せない
	}
	trigger push {
		accum 1 abort_if_not_equal 1
		trigger password_manager input8
	}
	trigger accum_set0 {
		accum 1 set 0
	}
	trigger accum_set1 {
		accum 1 set 1
	}
}

//input_disp////////////////////////////////////////////////////////////////////
input_disp {
	spawn {
		trigger input_disp set0
	}
	trigger noise {
		playsound sound/world/klaxon.wav
	}
	trigger set0 {
		faceangles 0 0 0 1
	}
	trigger set1 {
		faceangles 0 0 -45 1
	}
	trigger set2 {
		faceangles 0 0 -90 1
	}
	trigger set3 {
		faceangles 0 0 -135 1
	}
	trigger set4 {
		faceangles 0 0 -180 1
	}
	trigger setbad {
		faceangles 0 0 -225 1
	}
	trigger setgood {
		faceangles 0 0 -270 1
	}
}



//パスワードディスプレイのドア管理
password_door_manager {
	trigger push {
		accum 2 set 0
		trigger password_door_manager button_on
		trigger password_door_manager button_off
	}
	trigger button_on {
		accum 1 abort_if_not_equal 0
		trigger password_door_button on
		accum 1 set 1
		accum 2 set 1
	}
	trigger button_off {
		accum 2 abort_if_not_equal 0
		accum 1 abort_if_not_equal 1
		trigger password_door_button off
		accum 1 set 0
	}
}

password_door {
	trigger open {
		playsound sound/movers/doors/door10_open.wav
		wait 200
		playsound   sound/movers/doors/door2_loop.wav   looping   forever
		gotomarker pt_password_door_open 16 wait
		stopsound
		playsound   sound/movers/elevators/elev1_end.wav
	}
	trigger close {
		playsound sound/movers/doors/door10_open.wav
		wait 200
		playsound   sound/movers/doors/door2_loop.wav   looping   forever
		gotomarker pt_password_door_close 16 wait
		stopsound
		playsound   sound/movers/elevators/elev1_end.wav
	}
}

//password_door_button//////////////////////////////////////////////////////////
password_door_button {
	trigger on {
		playsound sound/misc/menu2.wav
		faceangles 0 180 0 1
		trigger password_door open
	}
	trigger off {
		playsound sound/misc/menu2.wav
		faceangles 0 0 0 1
		trigger password_door close
	}
}



dockey {
	spawn {
		//countdown
		accum 1 set 30
	}
	trigger on {
		alertentity siren_relay
		playsound   sound/movers/doors/door2_loop.wav   looping   forever
		trigger dockey count_30
		trigger dockey count_15
		trigger dockey count_10
		trigger dockey count_9
		trigger dockey count_8
		trigger dockey count_7
		trigger dockey count_6
		trigger dockey count_5
		trigger dockey count_4
		trigger dockey count_3
		trigger dockey count_2
		trigger dockey count_1
	}
	trigger finish {
		trigger halt_button accum2_set1  // Disable halt_button forever
		stopsound
		playsound   sound/movers/elevators/elev1_end.wav
		alertentity siren_relay
		trigger halt_button_mover off
		wait 1000
		playsound sound/world/alarmswitch.wav
		faceangles 0 0 90 1000
		alertentity dockey_glass
		trigger game_manager password_done
		//alertentity halt_button
	}
	trigger count_30 {
		accum 1 abort_if_not_equal 30
		gotomarker pt_dockey_15 8 wait
		accum 1 set 15
		alertentity snd_cd_15
		trigger dockey count_15
	}
	trigger count_15 {
		accum 1 abort_if_not_equal 15
		gotomarker pt_dockey_10 8 wait
		accum 1 set 10
		alertentity snd_cd_10
		trigger dockey count_10
	}
	trigger count_10 {
		accum 1 abort_if_not_equal 10
		gotomarker pt_dockey_9 8 wait
		accum 1 set 9
		alertentity snd_cd_9
		trigger dockey count_9
	}
	trigger count_9 {
		accum 1 abort_if_not_equal 9
		gotomarker pt_dockey_8 8 wait
		accum 1 set 8
		alertentity snd_cd_8
		trigger dockey count_8
	}
	trigger count_8 {
		accum 1 abort_if_not_equal 8
		gotomarker pt_dockey_7 8 wait
		accum 1 set 7
		alertentity snd_cd_7
		trigger dockey count_7
	}
	trigger count_7 {
		accum 1 abort_if_not_equal 7
		gotomarker pt_dockey_6 8 wait
		accum 1 set 6
		alertentity snd_cd_6
		trigger dockey count_6
	}
	trigger count_6 {
		accum 1 abort_if_not_equal 6
		gotomarker pt_dockey_5 8 wait
		accum 1 set 5
		alertentity snd_cd_5
		trigger dockey count_5
	}
	trigger count_5 {
		accum 1 abort_if_not_equal 5
		gotomarker pt_dockey_4 8 wait
		accum 1 set 4
		alertentity snd_cd_4
		trigger dockey count_4
	}
	trigger count_4 {
		accum 1 abort_if_not_equal 4
		gotomarker pt_dockey_3 8 wait
		accum 1 set 3
		alertentity snd_cd_3
		trigger dockey count_3
	}
	trigger count_3 {
		accum 1 abort_if_not_equal 3
		gotomarker pt_dockey_2 8 wait
		accum 1 set 2
		alertentity snd_cd_2
		trigger dockey count_2
	}
	trigger count_2 {
		accum 1 abort_if_not_equal 2
		gotomarker pt_dockey_1 8 wait
		accum 1 set 1
		alertentity snd_cd_1
		trigger dockey count_1
	}
	trigger count_1 {
		accum 1 abort_if_not_equal 1
		gotomarker pt_dockey_on 8 wait
		accum 1 set 0
		trigger dockey finish
	}
	trigger stop {
		alertentity siren_relay
		stopsound
		playsound   sound/movers/elevators/elev1_end.wav
		halt
		alertentity snd_cd_abort
	}
}



halt_button {
	trigger push {
		accum 1 abort_if_not_equal 1
		accum 2 abort_if_not_equal 0
		trigger dockey stop
		//パスワードリセット処理
		trigger password_manager reset
		trigger game_manager password_halted
		trigger halt_button_mover abort
		accum 1 set 0
		trigger button1 accum_set1
		trigger button2 accum_set1
		trigger button3 accum_set1
		trigger button4 accum_set1
		trigger button5 accum_set1
		trigger button6 accum_set1
		trigger button7 accum_set1
		trigger button8 accum_set1
	}
	trigger accum_set1 {
		accum 1 set 1
	}
	trigger accum_set2 {
		accum 1 set 2
	}
	trigger accum2_set1 {
		accum 2 set 1  // Disable halt_button forever
	}
}

halt_button_mover {
	trigger on {
		alertentity corona_halt_button
		faceangles 0 0 180 1
	}
	trigger off {
		alertentity corona_halt_button
		faceangles 0 0 0 1
	}
	trigger abort {
		playsound sound/world/alarmswitch.wav
		alertentity corona_halt_button
		faceangles 0 0 0 1
	}
}
